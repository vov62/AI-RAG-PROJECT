import os
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

if not OPENAI_API_KEY:
    raise ValueError("OpenAI API key is missing, Please set OPENAI_API_KEY in your .env file.")

client = OpenAI(api_key=OPENAI_API_KEY)
DEFAULT_MODEL = "gpt-4.1"

# מקבל גם הודעות וגם סטרינג

def get_openai_answer(prompt_or_messages, model_name=DEFAULT_MODEL, temperature=0.2):
    try:
        if isinstance(prompt_or_messages, str):
            messages = [
                {"role": "system", "content": "You are a helpful assistant who answers only in Hebrew."},
                {"role": "user", "content": prompt_or_messages}
            ]
        elif isinstance(prompt_or_messages, list):
            messages = prompt_or_messages
        else:
            raise ValueError("Invalid input type for get_openai_answer")

        response = client.chat.completions.create(
            model=model_name,
            messages=messages,
            temperature=temperature,
        )

        if response and response.choices:
            return response.choices[0].message.content.strip()

        return "No answer generated by OpenAI."
    except Exception as e:
        print(f"[OpenAI Error] {str(e)}")
        return {"error": f"Unexpected error calling OpenAI API: {str(e)}"}
